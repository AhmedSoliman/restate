name: Build CLI

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-cli:
    name: Build cli
    runs-on: ${{ matrix.target.runs-on }}
    strategy:
      matrix:
        target:
          - name: amd64-linux-musl
            runs-on: ubuntu-latest
            os: linux
            arch: amd64

          - name: arm64-linux-musl
            runs-on: ubuntu-latest
            os: linux
            arch: arm64

          - name: amd64-macos
            runs-on: macos-latest
            os: macos
            arch: amd64

          - name: arm64-macos
            runs-on: macos-latest
            os: macos
            arch: arm64

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          # need to provide a toolchain version because this action cannot read rust-toolchain.toml. See https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable

      - name: Install protoc
        uses: ./.github/actions/install-protoc

      - name: Setup just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: ${{ matrix.target.os != 'macos' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build cli (${{ matrix.target.name }})
        id: build-cli
        run: |
          just arch=${{ matrix.target.arch }} os=${{ matrix.target.os }} libc=musl cross-build --release --bin restate-cli
          echo "target=`just arch=${{ matrix.target.arch }} os=${{ matrix.target.os }} libc=musl print-target`" >> $GITHUB_OUTPUT

      - name: Upload binary (${{ matrix.target.name }})
        uses: actions/upload-artifact@v3
        with:
          name: restate-cli-${{ matrix.target.name }}
          path: target/${{ steps.build-cli.outputs.target }}/release/restate-cli