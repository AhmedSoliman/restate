name: Add/remove outside collaborators to org

on:
  workflow_dispatch:
    inputs:
      user:
        description: User to add/remove as outside collaborator
        required: true
        type: string
      operation:
        description: Adding or removing
        required: true
        type: choice
        options:
          - remove
          - add

jobs:

  update-outside-collaborators:
    name: Update outside collaborators
    runs-on: ubuntu-latest

    steps:
      - name: Update outside collaborators
        env:
          # Make sure that secrets.COLLABORATOR_ADMIN_ACCESS has write access to administration of all
          # collaborator repositories. You might have to update restatedev-ci's fine-grained PAT. Moreover,
          # make sure that restatedev-ci is an admin for all collaborator repositories.
          COLLABORATOR_REPOS: |
            restatedev/restate-dist
            restatedev/documentation
            restatedev/sdk-typescript
            restatedev/node-template-generator
            restatedev/tour-of-restate-typescript
            restatedev/tour-of-restate-typescript-handler
            restatedev/example-shopping-cart-typescript
            restatedev/example-lambda-ts-greeter
            restatedev/example-ticket-reservation-system
            restatedev/example-food-ordering
          GITHUB_TOKEN: ${{ secrets.COLLABORATOR_ADMIN_ACCESS }}
        run: |
          collaborator_repos="${{ env.COLLABORATOR_REPOS }}"
          for owner_repo in $collaborator_repos; do
            echo $owner_repo
          done

          if [ ${{ inputs.operation }} = "add" ]; then
            for owner_repo in $collaborator_repos; do
              echo "Add '${{ inputs.user }}' to repository '${owner_repo}'"
              gh api --method PUT -H "Accept: application/vnd.github+json" repos/${owner_repo}/collaborators/${{ inputs.user }} -f permission='read'
            done
          else
            for owner_repo in $collaborator_repos; do
              echo "Remove '${{ inputs.user }}' from repository '${owner_repo}'"

              # try deleting collaborators
              gh api --method DELETE -H "Accept: application/vnd.github+json" repos/${owner_repo}/collaborators/${{ inputs.user }}

              # try deleting pending invitations
              # find invitation id for a given user name
              invitation_id=$(gh api repos/${owner_repo}/invitations | jq '.[] | select(.invitee.login == "${{ inputs.user }}") | .id')
              if [ -n "${invitation_id}" ]; then
                gh api --method DELETE repos/${owner_repo}/invitations/${invitation_id}
              fi
            done
          fi
